{"mappings":"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","sources":["index.js"],"sourcesContent":["'use-strict';\n//sessionStorage.clear();\n//localStorage.clear();\nlet listaRestaurantes = document.getElementById('listaRestaurantes');\nlet contedorLista = document.getElementById('contedorLista');\nlet seleccionado = false;\nlet counter = (localStorage.getItem('counter') ? parseInt(localStorage.getItem('counter')) : 0)\nconst arrayDeMarcadores = []\n\nif (\"geolocation\" in navigator) {\n    navigator.geolocation.getCurrentPosition(function (position) {\n        //const { latitude, longitude } = position.coords;\n\n        const mapa = L.map(\"mapa\").setView([42.78493742707595, -7.727758789062501], 8);\n\n        L.tileLayer(\n            \"https://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}\",\n            {\n                attribution:\n                    \"Tiles &copy; Esri &mdash; Source: Esri, i-cubed, USDA, USGS, AEX, GeoEye, Getmapping, Aerogrid, IGN, IGP, UPR-EGP, and the GIS User Community\",\n            }\n        ).addTo(mapa);\n\n        //// MANTER OS MARCADORES ////\n        function manterMarcadores() {\n            for (chave of Object.keys(localStorage).sort()) {\n                if (\n                    chave !== \"IsThisFirstTime_Log_From_LiveServer\" &&\n                    chave !== \"counter\"\n                ) {\n\n                    if (localStorage.getItem(chave) !== '') {\n                        const { latitude, longitude, desc } = JSON.parse(\n                            localStorage.getItem(chave)\n                        );\n\n                        let newListMarquer = document.createElement(\"li\");\n                        newListMarquer.classList.add('m-1');\n                        newListMarquer.id = chave;\n                        newListMarquer.innerHTML = desc;\n                        newListMarquer.style.cursor = 'pointer';\n                        newListMarquer.style.backgroundImage =\n                            \"linear-gradient(to right, lightblue, white, lightblue)\";\n                        listaRestaurantes.prepend(newListMarquer);\n\n                        let deleteBtn = document.createElement(\"button\");\n                        deleteBtn.innerHTML =\n                            '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-trash-fill\" viewBox=\"0 0 16 16\"><path d=\"M2.5 1a1 1 0 0 0-1 1v1a1 1 0 0 0 1 1H3v9a2 2 0 0 0 2 2h6a2 2 0 0 0 2-2V4h.5a1 1 0 0 0 1-1V2a1 1 0 0 0-1-1H10a1 1 0 0 0-1-1H7a1 1 0 0 0-1 1H2.5zm3 4a.5.5 0 0 1 .5.5v7a.5.5 0 0 1-1 0v-7a.5.5 0 0 1 .5-.5zM8 5a.5.5 0 0 1 .5.5v7a.5.5 0 0 1-1 0v-7A.5.5 0 0 1 8 5zm3 .5v7a.5.5 0 0 1-1 0v-7a.5.5 0 0 1 1 0z\"/></svg>';\n                        deleteBtn.classList.add(\"btn\", \"btn-danger\", \"ms-5\");\n                        deleteBtn.addEventListener(\"click\", eliminarMarcador);\n                        newListMarquer.append(deleteBtn);\n\n\n                        getTemperatura(latitude, longitude).then(\n                            function (response) {\n                                let weatherDiv = document.createElement('div');\n                                weatherDiv.classList.add('row', 'text-center');\n                                let [temperatura, tempo] = response;\n                                let tempoElement = document.createElement('p');\n                                tempoElement.textContent = `${tempo.split('T')[0]}  ${tempo.split('T')[1]} h`;\n                                tempoElement.classList.add('col-6', 'h5');\n                                let temperaturaElement = document.createElement('p');\n                                temperaturaElement.textContent = `${temperatura} ºC`;\n                                temperaturaElement.classList.add('col-6', 'h5');\n                                \n                                weatherDiv.append(tempoElement);\n                                weatherDiv.append(temperaturaElement);\n                                newListMarquer.append(weatherDiv);\n                            }\n                        );\n\n\n                        const marcador = L.marker([latitude, longitude]);\n                        marcador.addTo(mapa);\n                        marcador.bindPopup(desc).openPopup();\n                        arrayDeMarcadores.push(marcador);\n                    } else {\n                        arrayDeMarcadores.push(null);\n                    }\n                }\n            }\n        }\n\n        manterMarcadores();\n        //// MANTER OS MARCADORES ////\n\n\n\n        //// ENADIR MARCADORES AO CLICAR NO MAPA ////\n        mapa.on(\"click\", engadirMarcador);\n\n        function engadirMarcador(e) {\n            let latitude = e.latlng.lat;\n            let longitude = e.latlng.lng;\n\n            if (!seleccionado) {\n                let newForm = document.createElement(\"form\");\n                newForm.action = \"\";\n                newForm.method = \"POST\";\n                newForm.addEventListener(\"submit\", gardarMarador);\n\n                let inputNome = document.createElement(\"input\");\n                inputNome.type = \"text\";\n                inputNome.placeholder = \"Nombre\";\n                inputNome.classList.add([\"col-5\", \"form-control\"]);\n\n                let inputGenero = document.createElement(\"input\");\n                inputGenero.type = \"text\";\n                inputGenero.placeholder = \"Género\";\n                inputGenero.classList.add([\"col-5\", \"form-control\"]);\n\n                let btnSubmit = document.createElement(\"button\");\n                btnSubmit.type = \"submit\";\n                btnSubmit.hidden = true;\n\n                newForm.append(inputNome);\n                newForm.append(inputGenero);\n                newForm.append(btnSubmit);\n                \n                contedorLista.append(newForm);\n                seleccionado = true;\n\n                inputNome.focus();\n\n                counter++;\n                localStorage.setItem(\"counter\", counter);\n                localStorage.setItem(\n                    `marcador${counter}`,\n                    JSON.stringify({ latitude: latitude, longitude: longitude })\n                );\n\n            }\n        }\n        //// ENADIR MARCADORES AO CLICAR NO MAPA ////\n\n\n\n        //// ENGADIR OS MARCADORES A LISTA DE MARCADORES ////\n        function gardarMarador(e) {\n            e.preventDefault();\n\n            let newListMarquer = document.createElement(\"li\");\n            newListMarquer.classList.add('m-1');\n            newListMarquer.id = `marcador${counter}`;\n            newListMarquer.innerHTML = `<b>Nombre: </b>${e.currentTarget.firstElementChild.value} - <b>Género: </b>${e.currentTarget.children[1].value}`;\n            newListMarquer.style.backgroundImage =\n                \"linear-gradient(to right, lightblue, white, lightblue)\";\n            newListMarquer.style.cursor = 'pointer';\n            listaRestaurantes.prepend(newListMarquer);\n\n            let deleteBtn = document.createElement('button');\n            deleteBtn.innerHTML = '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-trash-fill\" viewBox=\"0 0 16 16\"><path d=\"M2.5 1a1 1 0 0 0-1 1v1a1 1 0 0 0 1 1H3v9a2 2 0 0 0 2 2h6a2 2 0 0 0 2-2V4h.5a1 1 0 0 0 1-1V2a1 1 0 0 0-1-1H10a1 1 0 0 0-1-1H7a1 1 0 0 0-1 1H2.5zm3 4a.5.5 0 0 1 .5.5v7a.5.5 0 0 1-1 0v-7a.5.5 0 0 1 .5-.5zM8 5a.5.5 0 0 1 .5.5v7a.5.5 0 0 1-1 0v-7A.5.5 0 0 1 8 5zm3 .5v7a.5.5 0 0 1-1 0v-7a.5.5 0 0 1 1 0z\"/></svg>';\n            deleteBtn.classList.add(\"btn\", \"btn-danger\", \"ms-4\");\n            deleteBtn.addEventListener('click', eliminarMarcador);\n            newListMarquer.append(deleteBtn);\n\n            const { latitude, longitude } = JSON.parse(\n                localStorage.getItem(`marcador${counter}`)\n            );\n\n\n\n            getTemperatura(latitude, longitude).then(\n                function (response) {\n                    let weatherDiv = document.createElement('div');\n                    weatherDiv.classList.add('row', 'text-center');\n                    let [temperatura, tempo] = response;\n                    let tempoElement = document.createElement('p');\n                    tempoElement.textContent = `${tempo.split('T')[0]}  ${tempo.split('T')[1]} h`;\n                    tempoElement.classList.add('col-6','h5');\n                    let temperaturaElement = document.createElement('p');\n                    temperaturaElement.textContent = `${temperatura} ºC`;\n                    temperaturaElement.classList.add('col-6','h5');\n                    \n                    weatherDiv.append(tempoElement);\n                    weatherDiv.append(temperaturaElement);\n                    newListMarquer.append(weatherDiv);\n                }\n            );\n\n\n\n            const marcador = L.marker([latitude, longitude]);\n            marcador.addTo(mapa);\n            marcador\n                .bindPopup(\n                    `<b>Nombre: </b>${e.currentTarget.firstElementChild.value}\\n<b>Género: </b>${e.currentTarget.children[1].value}`\n                )\n                .openPopup();\n\n            localStorage.setItem(\n                `marcador${counter}`,\n                JSON.stringify({\n                    latitude: latitude,\n                    longitude: longitude,\n                    desc: `<b>Nombre: </b>${e.currentTarget.firstElementChild.value} - <b>Género: </b>${e.currentTarget.children[1].value}`,\n                })\n            );\n\n            arrayDeMarcadores.push(marcador);\n\n            e.currentTarget.remove();\n            seleccionado = false;\n        }\n        //// ENGADIR OS MARCADORES A LISTA DE MARCADORES ////\n\n\n\n        //// AO PULSAR NUN ELEMENTO NA LISTA FACER FOCUS NO MARCADOR CORRESPONDENTE ////\n        listaRestaurantes.addEventListener(\"click\", seleccionarMarcador);\n        function seleccionarMarcador(e) {\n            if (e.target.tagName !== 'BUTTON' && e.target.tagName !== 'svg' && e.target.tagName !== 'path') {\n                let elementoSeleccionado = e.target.closest('li');\n                const { latitude, longitude } = JSON.parse(localStorage.getItem(elementoSeleccionado.id));\n\n                mapa.closePopup();\n                mapa.flyTo([latitude, longitude], 17);\n                \n                let marcadorSeleccionado = arrayDeMarcadores[parseInt(elementoSeleccionado.id.substr(elementoSeleccionado.id.length - 1)) -1];\n                marcadorSeleccionado.openPopup();\n\n            }\n        }\n        //// AO PULSAR NUN ELEMENTO NA LISTA FACER FOCUS NO MARCADOR CORRESPONDENTE ////\n\n\n\n        //// ELIMINAR MARCADORES ////\n        function eliminarMarcador(e) {\n            if (e.currentTarget.tagName === 'BUTTON') {\n                let elementoEliminar = e.target.closest(\"li\");\n                let marcadorElminar = arrayDeMarcadores[parseInt(elementoEliminar.id.substr(elementoEliminar.id.length - 1)) -1];\n                console.log(arrayDeMarcadores);\n\n                arrayDeMarcadores[parseInt(elementoEliminar.id.substr(elementoEliminar.id.length - 1)) -1] = null;\n                marcadorElminar.remove();\n                elementoEliminar.remove();\n                \n                localStorage.setItem(elementoEliminar.id, '');\n\n                console.log(arrayDeMarcadores);\n            }\n        }\n        //// ELIMINAR MARCADORES ////\n\n\n\n        //// CONSULTA DE TEMPETRATURA PARA CADA MARCADOR ////\n        async function getTemperatura(latitude, longitude) {\n            let response = await fetch(`https://api.open-meteo.com/v1/forecast?latitude=${latitude}&longitude=${longitude}&hourly=temperature_2m&current_weather=true&timezone=Europe%2FLondon&start_date=2023-02-02&end_date=2023-02-02`);\n            let temperatura;\n            if (response.ok) {\n                temperatura = await response.json();\n                return [temperatura.current_weather.temperature, temperatura.current_weather.time];\n            }\n            return false;\n        }\n        //// CONSULTA DE TEMPETRATURA PARA CADA MARCADOR ////\n    });\n}"],"names":["listaRestaurantes","document","getElementById","contedorLista","seleccionado","counter","localStorage","getItem","parseInt","arrayDeMarcadores","navigator","geolocation","getCurrentPosition","position","mapa","L","map","setView","gardarMarador","e","preventDefault","newListMarquer","createElement","classList","add","id","innerHTML","currentTarget","firstElementChild","value","children","style","backgroundImage","cursor","prepend","deleteBtn","addEventListener","eliminarMarcador","append","latitude","longitude","JSON","parse","getTemperatura","then","response","weatherDiv","temperatura","tempo","tempoElement","textContent","split","temperaturaElement","marcador","marker","addTo","bindPopup","openPopup","setItem","stringify","desc","push","remove","tagName","elementoEliminar","target","closest","marcadorElminar","substr","length","console","log","async","fetch","ok","json","current_weather","temperature","time","tileLayer","attribution","chave","Object","keys","sort","manterMarcadores","on","latlng","lat","lng","newForm","action","method","inputNome","type","placeholder","inputGenero","btnSubmit","hidden","focus","elementoSeleccionado","closePopup","flyTo"],"version":3,"file":"index.38ed0512.js.map"}